Grammar

    0 $accept: program $end

    1 program: statement
    2        | program statement

    3 statement: assign
    4          | ifstatement
    5          | forstatement
    6          | printstatement

    7 assign: YUG_DECLARATION IDENTIFIER ASSIGN expr YUG_INT YUG_EOS
    8       | YUG_DECLARATION IDENTIFIER ASSIGN STRING YUG_STR YUG_EOS
    9       | IDENTIFIER ASSIGN expr YUG_EOS
   10       | IDENTIFIER ASSIGN STRING YUG_EOS

   11 ifstatement: YUG_IF expr YUG_IF_THEN LBRACE blockstatement RBRACE
   12            | YUG_IF expr YUG_IF_THEN LBRACE blockstatement RBRACE YUG_ELSE LBRACE blockstatement RBRACE

   13 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_SE expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE
   14             | YUG_INIT IDENTIFIER YUG_KO expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE

   15 blockstatement: body

   16 body: body assign
   17     | body ifstatement
   18     | body forstatement
   19     | body printstatement
   20     | assign
   21     | ifstatement
   22     | printstatement
   23     | forstatement

   24 printstatement: YUG_INIT STRING YUG_PRINT_END YUG_EOS
   25               | YUG_INIT expr YUG_PRINT_END YUG_EOS

   26 expr: expr PLUS expr
   27     | expr MINUS expr
   28     | expr MULTIPLY expr
   29     | expr DIVIDE expr
   30     | expr YUG_EQUAL expr
   31     | expr YUG_NOT_EQUAL expr
   32     | expr YUG_LESS expr
   33     | expr YUG_LESS_EQUAL expr
   34     | expr YUG_GREATER expr
   35     | expr YUG_GREATER_EQUAL expr
   36     | expr YUG_OR expr
   37     | expr YUG_AND expr
   38     | expr YUG_NOT expr
   39     | LPARAN expr RPARAN
   40     | NUMBER
   41     | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
ASSIGN (258) 7 8 9 10
YUG_OR (259) 36
YUG_AND (260) 37
YUG_NOT_EQUAL (261) 31
YUG_EQUAL (262) 30
YUG_GREATER_EQUAL (263) 35
YUG_GREATER (264) 34
YUG_LESS_EQUAL (265) 33
YUG_LESS (266) 32
YUG_IF (267) 11 12
YUG_ELSE (268) 12
MINUS (269) 27
PLUS (270) 26
DIVIDE (271) 29
MULTIPLY (272) 28
YUG_NOT (273) 38
RPARAN (274) 39
LPARAN (275) 39
LBRACE (276) 11 12 13 14
RBRACE (277) 11 12 13 14
YUG_DECLARATION (278) 7 8
YUG_INT (279) 7
YUG_EOS (280) 7 8 9 10 13 14 24 25
YUG_STR (281) 8
YUG_IF_THEN (282) 11 12
YUG_KO (283) 13 14
YUG_SE (284) 13
YUG_TAK (285) 13 14
YUG_INIT (286) 13 14 24 25
YUG_PRINT_END (287) 24 25
NUMBER (288) 40
IDENTIFIER (289) 7 8 9 10 13 14 41
STRING (290) 8 10 24


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1 2, on right: 0 2
statement (38)
    on left: 3 4 5 6, on right: 1 2
assign (39)
    on left: 7 8 9 10, on right: 3 16 20
ifstatement (40)
    on left: 11 12, on right: 4 17 21
forstatement (41)
    on left: 13 14, on right: 5 18 23
blockstatement (42)
    on left: 15, on right: 11 12 13 14
body (43)
    on left: 16 17 18 19 20 21 22 23, on right: 15 16 17 18 19
printstatement (44)
    on left: 24 25, on right: 6 19 22
expr (45)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41, on right:
    7 9 11 12 13 14 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39


state 0

    0 $accept: . program $end

    YUG_IF           shift, and go to state 1
    YUG_DECLARATION  shift, and go to state 2
    YUG_INIT         shift, and go to state 3
    IDENTIFIER       shift, and go to state 4

    program         go to state 5
    statement       go to state 6
    assign          go to state 7
    ifstatement     go to state 8
    forstatement    go to state 9
    printstatement  go to state 10


state 1

   11 ifstatement: YUG_IF . expr YUG_IF_THEN LBRACE blockstatement RBRACE
   12            | YUG_IF . expr YUG_IF_THEN LBRACE blockstatement RBRACE YUG_ELSE LBRACE blockstatement RBRACE

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 14


state 2

    7 assign: YUG_DECLARATION . IDENTIFIER ASSIGN expr YUG_INT YUG_EOS
    8       | YUG_DECLARATION . IDENTIFIER ASSIGN STRING YUG_STR YUG_EOS

    IDENTIFIER  shift, and go to state 15


state 3

   13 forstatement: YUG_INIT . IDENTIFIER YUG_KO expr YUG_SE expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE
   14             | YUG_INIT . IDENTIFIER YUG_KO expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE
   24 printstatement: YUG_INIT . STRING YUG_PRINT_END YUG_EOS
   25               | YUG_INIT . expr YUG_PRINT_END YUG_EOS

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 18


state 4

    9 assign: IDENTIFIER . ASSIGN expr YUG_EOS
   10       | IDENTIFIER . ASSIGN STRING YUG_EOS

    ASSIGN  shift, and go to state 19


state 5

    0 $accept: program . $end
    2 program: program . statement

    $end             shift, and go to state 20
    YUG_IF           shift, and go to state 1
    YUG_DECLARATION  shift, and go to state 2
    YUG_INIT         shift, and go to state 3
    IDENTIFIER       shift, and go to state 4

    statement       go to state 21
    assign          go to state 7
    ifstatement     go to state 8
    forstatement    go to state 9
    printstatement  go to state 10


state 6

    1 program: statement .

    $default  reduce using rule 1 (program)


state 7

    3 statement: assign .

    $default  reduce using rule 3 (statement)


state 8

    4 statement: ifstatement .

    $default  reduce using rule 4 (statement)


state 9

    5 statement: forstatement .

    $default  reduce using rule 5 (statement)


state 10

    6 statement: printstatement .

    $default  reduce using rule 6 (statement)


state 11

   39 expr: LPARAN . expr RPARAN

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 22


state 12

   40 expr: NUMBER .

    $default  reduce using rule 40 (expr)


state 13

   41 expr: IDENTIFIER .

    $default  reduce using rule 41 (expr)


state 14

   11 ifstatement: YUG_IF expr . YUG_IF_THEN LBRACE blockstatement RBRACE
   12            | YUG_IF expr . YUG_IF_THEN LBRACE blockstatement RBRACE YUG_ELSE LBRACE blockstatement RBRACE
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    YUG_OR             shift, and go to state 23
    YUG_AND            shift, and go to state 24
    YUG_NOT_EQUAL      shift, and go to state 25
    YUG_EQUAL          shift, and go to state 26
    YUG_GREATER_EQUAL  shift, and go to state 27
    YUG_GREATER        shift, and go to state 28
    YUG_LESS_EQUAL     shift, and go to state 29
    YUG_LESS           shift, and go to state 30
    MINUS              shift, and go to state 31
    PLUS               shift, and go to state 32
    DIVIDE             shift, and go to state 33
    MULTIPLY           shift, and go to state 34
    YUG_NOT            shift, and go to state 35
    YUG_IF_THEN        shift, and go to state 36


state 15

    7 assign: YUG_DECLARATION IDENTIFIER . ASSIGN expr YUG_INT YUG_EOS
    8       | YUG_DECLARATION IDENTIFIER . ASSIGN STRING YUG_STR YUG_EOS

    ASSIGN  shift, and go to state 37


state 16

   13 forstatement: YUG_INIT IDENTIFIER . YUG_KO expr YUG_SE expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE
   14             | YUG_INIT IDENTIFIER . YUG_KO expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE
   41 expr: IDENTIFIER .

    YUG_KO  shift, and go to state 38

    $default  reduce using rule 41 (expr)


state 17

   24 printstatement: YUG_INIT STRING . YUG_PRINT_END YUG_EOS

    YUG_PRINT_END  shift, and go to state 39


state 18

   25 printstatement: YUG_INIT expr . YUG_PRINT_END YUG_EOS
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    YUG_OR             shift, and go to state 23
    YUG_AND            shift, and go to state 24
    YUG_NOT_EQUAL      shift, and go to state 25
    YUG_EQUAL          shift, and go to state 26
    YUG_GREATER_EQUAL  shift, and go to state 27
    YUG_GREATER        shift, and go to state 28
    YUG_LESS_EQUAL     shift, and go to state 29
    YUG_LESS           shift, and go to state 30
    MINUS              shift, and go to state 31
    PLUS               shift, and go to state 32
    DIVIDE             shift, and go to state 33
    MULTIPLY           shift, and go to state 34
    YUG_NOT            shift, and go to state 35
    YUG_PRINT_END      shift, and go to state 40


state 19

    9 assign: IDENTIFIER ASSIGN . expr YUG_EOS
   10       | IDENTIFIER ASSIGN . STRING YUG_EOS

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    STRING      shift, and go to state 41

    expr  go to state 42


state 20

    0 $accept: program $end .

    $default  accept


state 21

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 22

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr
   39     | LPARAN expr . RPARAN

    YUG_OR             shift, and go to state 23
    YUG_AND            shift, and go to state 24
    YUG_NOT_EQUAL      shift, and go to state 25
    YUG_EQUAL          shift, and go to state 26
    YUG_GREATER_EQUAL  shift, and go to state 27
    YUG_GREATER        shift, and go to state 28
    YUG_LESS_EQUAL     shift, and go to state 29
    YUG_LESS           shift, and go to state 30
    MINUS              shift, and go to state 31
    PLUS               shift, and go to state 32
    DIVIDE             shift, and go to state 33
    MULTIPLY           shift, and go to state 34
    YUG_NOT            shift, and go to state 35
    RPARAN             shift, and go to state 43


state 23

   36 expr: expr YUG_OR . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 44


state 24

   37 expr: expr YUG_AND . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 45


state 25

   31 expr: expr YUG_NOT_EQUAL . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 46


state 26

   30 expr: expr YUG_EQUAL . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 47


state 27

   35 expr: expr YUG_GREATER_EQUAL . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 48


state 28

   34 expr: expr YUG_GREATER . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 49


state 29

   33 expr: expr YUG_LESS_EQUAL . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 50


state 30

   32 expr: expr YUG_LESS . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 51


state 31

   27 expr: expr MINUS . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 52


state 32

   26 expr: expr PLUS . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 53


state 33

   29 expr: expr DIVIDE . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 54


state 34

   28 expr: expr MULTIPLY . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 55


state 35

   38 expr: expr YUG_NOT . expr

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 56


state 36

   11 ifstatement: YUG_IF expr YUG_IF_THEN . LBRACE blockstatement RBRACE
   12            | YUG_IF expr YUG_IF_THEN . LBRACE blockstatement RBRACE YUG_ELSE LBRACE blockstatement RBRACE

    LBRACE  shift, and go to state 57


state 37

    7 assign: YUG_DECLARATION IDENTIFIER ASSIGN . expr YUG_INT YUG_EOS
    8       | YUG_DECLARATION IDENTIFIER ASSIGN . STRING YUG_STR YUG_EOS

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    STRING      shift, and go to state 58

    expr  go to state 59


state 38

   13 forstatement: YUG_INIT IDENTIFIER YUG_KO . expr YUG_SE expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE
   14             | YUG_INIT IDENTIFIER YUG_KO . expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 60


state 39

   24 printstatement: YUG_INIT STRING YUG_PRINT_END . YUG_EOS

    YUG_EOS  shift, and go to state 61


state 40

   25 printstatement: YUG_INIT expr YUG_PRINT_END . YUG_EOS

    YUG_EOS  shift, and go to state 62


state 41

   10 assign: IDENTIFIER ASSIGN STRING . YUG_EOS

    YUG_EOS  shift, and go to state 63


state 42

    9 assign: IDENTIFIER ASSIGN expr . YUG_EOS
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    YUG_OR             shift, and go to state 23
    YUG_AND            shift, and go to state 24
    YUG_NOT_EQUAL      shift, and go to state 25
    YUG_EQUAL          shift, and go to state 26
    YUG_GREATER_EQUAL  shift, and go to state 27
    YUG_GREATER        shift, and go to state 28
    YUG_LESS_EQUAL     shift, and go to state 29
    YUG_LESS           shift, and go to state 30
    MINUS              shift, and go to state 31
    PLUS               shift, and go to state 32
    DIVIDE             shift, and go to state 33
    MULTIPLY           shift, and go to state 34
    YUG_NOT            shift, and go to state 35
    YUG_EOS            shift, and go to state 64


state 43

   39 expr: LPARAN expr RPARAN .

    $default  reduce using rule 39 (expr)


state 44

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   36     | expr YUG_OR expr .
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    YUG_AND            shift, and go to state 24
    YUG_NOT_EQUAL      shift, and go to state 25
    YUG_EQUAL          shift, and go to state 26
    YUG_GREATER_EQUAL  shift, and go to state 27
    YUG_GREATER        shift, and go to state 28
    YUG_LESS_EQUAL     shift, and go to state 29
    YUG_LESS           shift, and go to state 30
    MINUS              shift, and go to state 31
    PLUS               shift, and go to state 32
    DIVIDE             shift, and go to state 33
    MULTIPLY           shift, and go to state 34
    YUG_NOT            shift, and go to state 35

    $default  reduce using rule 36 (expr)


state 45

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   37     | expr YUG_AND expr .
   38     | expr . YUG_NOT expr

    YUG_NOT_EQUAL      shift, and go to state 25
    YUG_EQUAL          shift, and go to state 26
    YUG_GREATER_EQUAL  shift, and go to state 27
    YUG_GREATER        shift, and go to state 28
    YUG_LESS_EQUAL     shift, and go to state 29
    YUG_LESS           shift, and go to state 30
    MINUS              shift, and go to state 31
    PLUS               shift, and go to state 32
    DIVIDE             shift, and go to state 33
    MULTIPLY           shift, and go to state 34
    YUG_NOT            shift, and go to state 35

    $default  reduce using rule 37 (expr)


state 46

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   31     | expr YUG_NOT_EQUAL expr .
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    YUG_GREATER_EQUAL  shift, and go to state 27
    YUG_GREATER        shift, and go to state 28
    YUG_LESS_EQUAL     shift, and go to state 29
    YUG_LESS           shift, and go to state 30
    MINUS              shift, and go to state 31
    PLUS               shift, and go to state 32
    DIVIDE             shift, and go to state 33
    MULTIPLY           shift, and go to state 34
    YUG_NOT            shift, and go to state 35

    $default  reduce using rule 31 (expr)


state 47

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   30     | expr YUG_EQUAL expr .
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    YUG_GREATER_EQUAL  shift, and go to state 27
    YUG_GREATER        shift, and go to state 28
    YUG_LESS_EQUAL     shift, and go to state 29
    YUG_LESS           shift, and go to state 30
    MINUS              shift, and go to state 31
    PLUS               shift, and go to state 32
    DIVIDE             shift, and go to state 33
    MULTIPLY           shift, and go to state 34
    YUG_NOT            shift, and go to state 35

    $default  reduce using rule 30 (expr)


state 48

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   35     | expr YUG_GREATER_EQUAL expr .
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    MINUS     shift, and go to state 31
    PLUS      shift, and go to state 32
    DIVIDE    shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    YUG_NOT   shift, and go to state 35

    $default  reduce using rule 35 (expr)


state 49

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   34     | expr YUG_GREATER expr .
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    MINUS     shift, and go to state 31
    PLUS      shift, and go to state 32
    DIVIDE    shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    YUG_NOT   shift, and go to state 35

    $default  reduce using rule 34 (expr)


state 50

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   33     | expr YUG_LESS_EQUAL expr .
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    MINUS     shift, and go to state 31
    PLUS      shift, and go to state 32
    DIVIDE    shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    YUG_NOT   shift, and go to state 35

    $default  reduce using rule 33 (expr)


state 51

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   32     | expr YUG_LESS expr .
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    MINUS     shift, and go to state 31
    PLUS      shift, and go to state 32
    DIVIDE    shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    YUG_NOT   shift, and go to state 35

    $default  reduce using rule 32 (expr)


state 52

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   27     | expr MINUS expr .
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    DIVIDE    shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    YUG_NOT   shift, and go to state 35

    $default  reduce using rule 27 (expr)


state 53

   26 expr: expr . PLUS expr
   26     | expr PLUS expr .
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    DIVIDE    shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    YUG_NOT   shift, and go to state 35

    $default  reduce using rule 26 (expr)


state 54

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   29     | expr DIVIDE expr .
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    YUG_NOT  shift, and go to state 35

    $default  reduce using rule 29 (expr)


state 55

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   28     | expr MULTIPLY expr .
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    YUG_NOT  shift, and go to state 35

    $default  reduce using rule 28 (expr)


state 56

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr
   38     | expr YUG_NOT expr .

    YUG_NOT  shift, and go to state 35

    $default  reduce using rule 38 (expr)


state 57

   11 ifstatement: YUG_IF expr YUG_IF_THEN LBRACE . blockstatement RBRACE
   12            | YUG_IF expr YUG_IF_THEN LBRACE . blockstatement RBRACE YUG_ELSE LBRACE blockstatement RBRACE

    YUG_IF           shift, and go to state 1
    YUG_DECLARATION  shift, and go to state 2
    YUG_INIT         shift, and go to state 3
    IDENTIFIER       shift, and go to state 4

    assign          go to state 65
    ifstatement     go to state 66
    forstatement    go to state 67
    blockstatement  go to state 68
    body            go to state 69
    printstatement  go to state 70


state 58

    8 assign: YUG_DECLARATION IDENTIFIER ASSIGN STRING . YUG_STR YUG_EOS

    YUG_STR  shift, and go to state 71


state 59

    7 assign: YUG_DECLARATION IDENTIFIER ASSIGN expr . YUG_INT YUG_EOS
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    YUG_OR             shift, and go to state 23
    YUG_AND            shift, and go to state 24
    YUG_NOT_EQUAL      shift, and go to state 25
    YUG_EQUAL          shift, and go to state 26
    YUG_GREATER_EQUAL  shift, and go to state 27
    YUG_GREATER        shift, and go to state 28
    YUG_LESS_EQUAL     shift, and go to state 29
    YUG_LESS           shift, and go to state 30
    MINUS              shift, and go to state 31
    PLUS               shift, and go to state 32
    DIVIDE             shift, and go to state 33
    MULTIPLY           shift, and go to state 34
    YUG_NOT            shift, and go to state 35
    YUG_INT            shift, and go to state 72


state 60

   13 forstatement: YUG_INIT IDENTIFIER YUG_KO expr . YUG_SE expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE
   14             | YUG_INIT IDENTIFIER YUG_KO expr . YUG_TAK YUG_EOS LBRACE blockstatement RBRACE
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    YUG_OR             shift, and go to state 23
    YUG_AND            shift, and go to state 24
    YUG_NOT_EQUAL      shift, and go to state 25
    YUG_EQUAL          shift, and go to state 26
    YUG_GREATER_EQUAL  shift, and go to state 27
    YUG_GREATER        shift, and go to state 28
    YUG_LESS_EQUAL     shift, and go to state 29
    YUG_LESS           shift, and go to state 30
    MINUS              shift, and go to state 31
    PLUS               shift, and go to state 32
    DIVIDE             shift, and go to state 33
    MULTIPLY           shift, and go to state 34
    YUG_NOT            shift, and go to state 35
    YUG_SE             shift, and go to state 73
    YUG_TAK            shift, and go to state 74


state 61

   24 printstatement: YUG_INIT STRING YUG_PRINT_END YUG_EOS .

    $default  reduce using rule 24 (printstatement)


state 62

   25 printstatement: YUG_INIT expr YUG_PRINT_END YUG_EOS .

    $default  reduce using rule 25 (printstatement)


state 63

   10 assign: IDENTIFIER ASSIGN STRING YUG_EOS .

    $default  reduce using rule 10 (assign)


state 64

    9 assign: IDENTIFIER ASSIGN expr YUG_EOS .

    $default  reduce using rule 9 (assign)


state 65

   20 body: assign .

    $default  reduce using rule 20 (body)


state 66

   21 body: ifstatement .

    $default  reduce using rule 21 (body)


state 67

   23 body: forstatement .

    $default  reduce using rule 23 (body)


state 68

   11 ifstatement: YUG_IF expr YUG_IF_THEN LBRACE blockstatement . RBRACE
   12            | YUG_IF expr YUG_IF_THEN LBRACE blockstatement . RBRACE YUG_ELSE LBRACE blockstatement RBRACE

    RBRACE  shift, and go to state 75


state 69

   15 blockstatement: body .
   16 body: body . assign
   17     | body . ifstatement
   18     | body . forstatement
   19     | body . printstatement

    YUG_IF           shift, and go to state 1
    YUG_DECLARATION  shift, and go to state 2
    YUG_INIT         shift, and go to state 3
    IDENTIFIER       shift, and go to state 4

    $default  reduce using rule 15 (blockstatement)

    assign          go to state 76
    ifstatement     go to state 77
    forstatement    go to state 78
    printstatement  go to state 79


state 70

   22 body: printstatement .

    $default  reduce using rule 22 (body)


state 71

    8 assign: YUG_DECLARATION IDENTIFIER ASSIGN STRING YUG_STR . YUG_EOS

    YUG_EOS  shift, and go to state 80


state 72

    7 assign: YUG_DECLARATION IDENTIFIER ASSIGN expr YUG_INT . YUG_EOS

    YUG_EOS  shift, and go to state 81


state 73

   13 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_SE . expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE

    LPARAN      shift, and go to state 11
    NUMBER      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    expr  go to state 82


state 74

   14 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_TAK . YUG_EOS LBRACE blockstatement RBRACE

    YUG_EOS  shift, and go to state 83


state 75

   11 ifstatement: YUG_IF expr YUG_IF_THEN LBRACE blockstatement RBRACE .
   12            | YUG_IF expr YUG_IF_THEN LBRACE blockstatement RBRACE . YUG_ELSE LBRACE blockstatement RBRACE

    YUG_ELSE  shift, and go to state 84

    $default  reduce using rule 11 (ifstatement)


state 76

   16 body: body assign .

    $default  reduce using rule 16 (body)


state 77

   17 body: body ifstatement .

    $default  reduce using rule 17 (body)


state 78

   18 body: body forstatement .

    $default  reduce using rule 18 (body)


state 79

   19 body: body printstatement .

    $default  reduce using rule 19 (body)


state 80

    8 assign: YUG_DECLARATION IDENTIFIER ASSIGN STRING YUG_STR YUG_EOS .

    $default  reduce using rule 8 (assign)


state 81

    7 assign: YUG_DECLARATION IDENTIFIER ASSIGN expr YUG_INT YUG_EOS .

    $default  reduce using rule 7 (assign)


state 82

   13 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_SE expr . YUG_TAK YUG_EOS LBRACE blockstatement RBRACE
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MULTIPLY expr
   29     | expr . DIVIDE expr
   30     | expr . YUG_EQUAL expr
   31     | expr . YUG_NOT_EQUAL expr
   32     | expr . YUG_LESS expr
   33     | expr . YUG_LESS_EQUAL expr
   34     | expr . YUG_GREATER expr
   35     | expr . YUG_GREATER_EQUAL expr
   36     | expr . YUG_OR expr
   37     | expr . YUG_AND expr
   38     | expr . YUG_NOT expr

    YUG_OR             shift, and go to state 23
    YUG_AND            shift, and go to state 24
    YUG_NOT_EQUAL      shift, and go to state 25
    YUG_EQUAL          shift, and go to state 26
    YUG_GREATER_EQUAL  shift, and go to state 27
    YUG_GREATER        shift, and go to state 28
    YUG_LESS_EQUAL     shift, and go to state 29
    YUG_LESS           shift, and go to state 30
    MINUS              shift, and go to state 31
    PLUS               shift, and go to state 32
    DIVIDE             shift, and go to state 33
    MULTIPLY           shift, and go to state 34
    YUG_NOT            shift, and go to state 35
    YUG_TAK            shift, and go to state 85


state 83

   14 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_TAK YUG_EOS . LBRACE blockstatement RBRACE

    LBRACE  shift, and go to state 86


state 84

   12 ifstatement: YUG_IF expr YUG_IF_THEN LBRACE blockstatement RBRACE YUG_ELSE . LBRACE blockstatement RBRACE

    LBRACE  shift, and go to state 87


state 85

   13 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_SE expr YUG_TAK . YUG_EOS LBRACE blockstatement RBRACE

    YUG_EOS  shift, and go to state 88


state 86

   14 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_TAK YUG_EOS LBRACE . blockstatement RBRACE

    YUG_IF           shift, and go to state 1
    YUG_DECLARATION  shift, and go to state 2
    YUG_INIT         shift, and go to state 3
    IDENTIFIER       shift, and go to state 4

    assign          go to state 65
    ifstatement     go to state 66
    forstatement    go to state 67
    blockstatement  go to state 89
    body            go to state 69
    printstatement  go to state 70


state 87

   12 ifstatement: YUG_IF expr YUG_IF_THEN LBRACE blockstatement RBRACE YUG_ELSE LBRACE . blockstatement RBRACE

    YUG_IF           shift, and go to state 1
    YUG_DECLARATION  shift, and go to state 2
    YUG_INIT         shift, and go to state 3
    IDENTIFIER       shift, and go to state 4

    assign          go to state 65
    ifstatement     go to state 66
    forstatement    go to state 67
    blockstatement  go to state 90
    body            go to state 69
    printstatement  go to state 70


state 88

   13 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_SE expr YUG_TAK YUG_EOS . LBRACE blockstatement RBRACE

    LBRACE  shift, and go to state 91


state 89

   14 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_TAK YUG_EOS LBRACE blockstatement . RBRACE

    RBRACE  shift, and go to state 92


state 90

   12 ifstatement: YUG_IF expr YUG_IF_THEN LBRACE blockstatement RBRACE YUG_ELSE LBRACE blockstatement . RBRACE

    RBRACE  shift, and go to state 93


state 91

   13 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_SE expr YUG_TAK YUG_EOS LBRACE . blockstatement RBRACE

    YUG_IF           shift, and go to state 1
    YUG_DECLARATION  shift, and go to state 2
    YUG_INIT         shift, and go to state 3
    IDENTIFIER       shift, and go to state 4

    assign          go to state 65
    ifstatement     go to state 66
    forstatement    go to state 67
    blockstatement  go to state 94
    body            go to state 69
    printstatement  go to state 70


state 92

   14 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE .

    $default  reduce using rule 14 (forstatement)


state 93

   12 ifstatement: YUG_IF expr YUG_IF_THEN LBRACE blockstatement RBRACE YUG_ELSE LBRACE blockstatement RBRACE .

    $default  reduce using rule 12 (ifstatement)


state 94

   13 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_SE expr YUG_TAK YUG_EOS LBRACE blockstatement . RBRACE

    RBRACE  shift, and go to state 95


state 95

   13 forstatement: YUG_INIT IDENTIFIER YUG_KO expr YUG_SE expr YUG_TAK YUG_EOS LBRACE blockstatement RBRACE .

    $default  reduce using rule 13 (forstatement)
